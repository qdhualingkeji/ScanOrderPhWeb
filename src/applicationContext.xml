<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	>
	<!-- 配置数据源 -->
	<bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://192.168.1.5:3306/chc</value>
		</property>
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
		<!-- 连接池的最大连接数 -->
		<property name="maxPoolSize" value="40"></property>
		<!-- 连接池的最小连接数 -->
		<property name="minPoolSize" value="1"></property>
		<!-- 连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"></property>
		<!-- 指定连接池的最大空闲时间 -->
		<property name="maxIdleTime" value="20"></property>
	</bean>
	<!-- /配置数据源 -->
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml">
		</property>
	</bean>
	<!-- /配置SessionFactory -->
	<bean id="SimpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="DataSource" />
	</bean>
	<!-- 配置事务 -->
	<!-- 1.定义事务处理类，不同的数据访问方式事务处理类不同 --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="DataSource"></property>
	</bean>
	<!-- 2.定义事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!--定义方法的过滤规则 -->
		<tx:attributes>
			<!-- 定义所有方法都使用事务 -->
			<tx:method name="*" propagation="REQUIRED"/>
			<!-- 定义get开头的方法都是只读的 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3.定义AOP配置 -->
	<aop:config>
		<!-- 定义一个切入点 -->
		<aop:pointcut id="services" expression="execution (* com.qdhualing.app.service.impl.*.*(..))"/>
		<!-- 对切入点和事务的通知进行匹配 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
	</aop:config>
	<!-- 配置事务 -->
	
	<!-- 1.定义事务处理类，不同的数据访问方式事务处理类不同 --> 
	<bean id="hbtransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 2.定义事务通知 -->
	<tx:advice id="hbtxAdvice" transaction-manager="hbtransactionManager">
		<!--定义方法的过滤规则 -->
		<tx:attributes>
			<!-- 定义所有方法都使用事务 -->
			<tx:method name="*" propagation="REQUIRED"/>
			<!-- 定义get开头的方法都是只读的 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3.定义AOP配置 -->
	<aop:config>
		<!-- 定义一个切入点 -->
		<aop:pointcut id="hbdaos" expression="execution (* com.qdhualing.app.dao.impl.*.*(..))"/>
		<!-- 对切入点和事务的通知进行匹配 -->
		<aop:advisor advice-ref="hbtxAdvice" pointcut-ref="hbdaos"/>
	</aop:config>
	<!-- /配置事务 -->
	
	<!-- DAO -->
	<bean id="SumictAdminDAO"
		class="com.qdhualing.app.dao.impl.SumictAdminDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
<!-- /DAO -->
<!-- Service -->
	<bean id="SumictAdminService"
		class="com.qdhualing.app.service.impl.SumictAdminServiceImpl">
		<property name="sumictAdminDAO"><ref bean="SumictAdminDAO" /></property>
	</bean>
	<bean id="LoginAction" class="com.qdhualing.app.action.LoginAction" >
		<property name="sumictAdminService" ref="SumictAdminService"></property>
	</bean>
	<bean id="FinanceAction" class="com.qdhualing.app.action.FinanceAction" >
	</bean>

	<bean id="DrugsAction" class="com.qdhualing.app.action.DrugsAction" >
	</bean>
	<bean id="EquipmentAction" class="com.qdhualing.app.action.EquipmentAction" >
	</bean>



	<bean id="CommonAction" class="com.qdhualing.app.action.CommonAction" >
	</bean>
	<bean id="DoctorAction" class="com.qdhualing.app.action.DoctorAction" >
	</bean>
	<bean id="HospitalAction" class="com.qdhualing.app.action.HospitalAction" >
	</bean>
	<bean id="HealthMembers" class="com.qdhualing.app.action.HealthMembers" >
	</bean>
	<bean id="SumictAdminAction" class="com.qdhualing.app.action.SumictAdminAction" >
		<property name="sumictAdminService" ref="SumictAdminService"></property>
	</bean>
	<bean id="OfficeAction" class="com.qdhualing.app.action.OfficeAction" >
	</bean>
	<bean id="PhoneAction" class="com.qdhualing.app.action.PhoneAction" >
	</bean>
	<!-- /DAO -->

	<!-- Spring 发邮件 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<!-- 设置发件人邮箱类型 -->
			<value>smtp.163.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
	  			<!-- 如果要使用用户名和密码验证,这一步需要 -->
	    		<prop key="mail.smtp.auth">true</prop>
  			</props>
		</property>
		<property name="username">
			<value>sumict@163.com</value>
		</property>
		<property name="password">
			<value>sumict123456</value>
		</property>
	</bean>
	<!-- 简单的message -->
	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="to">
			<value></value>
		</property>
		<property name="from">
			<value>sumict@163.com</value>
		</property>
		<property name="subject"> 
			<value>社区医疗平台</value>
		</property>
	</bean>
	<!-- 测试发送的类 -->
	<bean id="testMailSender" class="com.qdhualing.app.util.SenderMail">
		<property name="mailMessage">
			<ref bean="mailMessage"/>
		</property>
		<property name="mailSender">
			<ref bean="mailSender"/>
		</property>
	</bean>
	<!-- /Spring 发邮件 -->
</beans>